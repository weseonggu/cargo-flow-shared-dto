/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = 'com.cargoflow'
            artifactId = 'cargo'
            version = '1.0.0'
        }
    }
    repositories {
        maven {
            url = uri("s3://cargoflowlib/path/to/repository")
            credentials(AwsCredentials) {
                accessKey = project.findProperty("aws.accessKeyId") ?: System.getenv("AWS_ACCESS_KEY_ID")
                secretKey = project.findProperty("aws.secretKey") ?: System.getenv("AWS_SECRET_ACCESS_KEY")
            }
        }
    }
}
dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
